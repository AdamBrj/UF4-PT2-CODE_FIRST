// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UF4_PT2_CODE_FIRST;

namespace UF4_PT2_CODE_FIRST.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240307083203_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.Customer", b =>
                {
                    b.Property<int>("CustomerNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT(11)");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactFirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactLastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("SalesRepEmployeeNumber")
                        .HasColumnType("INT(11)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("CustomerNumber");

                    b.HasIndex("SalesRepEmployeeNumber");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.Employee", b =>
                {
                    b.Property<int>("EmployeeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("ReportsTo")
                        .HasColumnType("INT(11)");

                    b.HasKey("EmployeeNumber");

                    b.HasIndex("OfficeCode");

                    b.HasIndex("ReportsTo");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.Office", b =>
                {
                    b.Property<string>("OfficeCode")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Territory")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("OfficeCode");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.OrderDetail", b =>
                {
                    b.Property<int>("OrderNumber")
                        .HasColumnType("INT(11)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("varchar(15)");

                    b.Property<short>("OrderLineNumber")
                        .HasColumnType("SMALLINT(6)");

                    b.Property<decimal>("PriceEach")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<int>("QuantityOrdered")
                        .HasColumnType("INT(11)");

                    b.HasKey("OrderNumber", "ProductCode");

                    b.HasIndex("ProductCode");

                    b.ToTable("Orderdetails");
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.Orders", b =>
                {
                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT(11)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CustomerNumberId")
                        .HasColumnType("INT(11)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("RequiredDate")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("DATE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.HasKey("OrderNumber");

                    b.HasIndex("CustomerNumberId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.Payment", b =>
                {
                    b.Property<int>("CustomerNumber")
                        .HasColumnType("INT(11)");

                    b.Property<string>("CheckNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("DATE");

                    b.HasKey("CustomerNumber", "CheckNumber");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.Product", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasColumnType("varchar(15)");

                    b.Property<decimal>("BuyPrice")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<decimal>("MSRP")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductLineId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<string>("ProductScale")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ProductVendor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<short>("QuantityInStock")
                        .HasColumnType("SMALLINT(6)");

                    b.HasKey("ProductCode");

                    b.HasIndex("ProductLineId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.ProductLine", b =>
                {
                    b.Property<string>("ProductLines")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HtmlDescription")
                        .IsRequired()
                        .HasColumnType("MEDIUMTEXT");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("MEDIUMBLOB");

                    b.Property<string>("TextDescription")
                        .IsRequired()
                        .HasColumnType("varchar(4000)");

                    b.HasKey("ProductLines");

                    b.ToTable("Productlines");
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.Customer", b =>
                {
                    b.HasOne("UF4_PT2_CODE_FIRST.MODEL.Employee", "SalesRep")
                        .WithMany("Customers")
                        .HasForeignKey("SalesRepEmployeeNumber");
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.Employee", b =>
                {
                    b.HasOne("UF4_PT2_CODE_FIRST.MODEL.Office", "Office")
                        .WithMany("Employees")
                        .HasForeignKey("OfficeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UF4_PT2_CODE_FIRST.MODEL.Employee", "Manager")
                        .WithMany("Reports")
                        .HasForeignKey("ReportsTo");
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.OrderDetail", b =>
                {
                    b.HasOne("UF4_PT2_CODE_FIRST.MODEL.Orders", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UF4_PT2_CODE_FIRST.MODEL.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.Orders", b =>
                {
                    b.HasOne("UF4_PT2_CODE_FIRST.MODEL.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerNumberId");
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.Payment", b =>
                {
                    b.HasOne("UF4_PT2_CODE_FIRST.MODEL.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UF4_PT2_CODE_FIRST.MODEL.Product", b =>
                {
                    b.HasOne("UF4_PT2_CODE_FIRST.MODEL.ProductLine", "ProductLineNavigation")
                        .WithMany("Products")
                        .HasForeignKey("ProductLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
